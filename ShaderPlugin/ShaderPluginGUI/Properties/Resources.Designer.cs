//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShaderPluginGUI.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ShaderPluginGUI.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///uniform sampler2D TextureUnit0;
        ///
        ///in vec2 f_UV;
        ///
        ///layout(location = 0) out vec4 FragColor;
        ///
        ///uniform int EditingMode = 0;
        ////*
        ///        Nothing = 0,      // 0
        ///        RXXX_TO_RRR1,     // 1
        ///        RAXX_TO_RRRA,     // 2
        ///		RGBA_TO_RAGB,     // 4
        ///        RGXX_TO_RG01,     // 8
        ///        RGAX_TO_RG0A,     // 16
        ///		RGBA_TO_RGAB,     // 32
        ///        RGBX_TO_RGB1,     // 64
        ///		RGBA_TO_RGBA,	  // 128
        ///        Depth16_PS_To_GL, // 256
        ///        Depth16_GL_To_PS  // 512
        ///		FlipUV_Y		  // 1024
        ///*/
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ConvertImageFomat_FS {
            get {
                return ResourceManager.GetString("ConvertImageFomat_FS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///layout(location = 0) in vec2 v_UV;
        ///
        ///uniform int EditingMode = 0;
        ///
        ///out vec2 f_UV;
        ///
        ///void main()
        ///{
        ///	f_UV = v_UV;
        ///	vec2 Position = v_UV * 2.0 - 1.0;
        ///	gl_Position = vec4(Position, 0.0, 1.0);
        ///
        ///	if ((EditingMode &amp; 1024) == 1024) // FlipUV_Y
        ///		f_UV.y = 1.0 - f_UV.y;
        ///}.
        /// </summary>
        public static string ConvertImageFomat_VS {
            get {
                return ResourceManager.GetString("ConvertImageFomat_VS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Copy {
            get {
                object obj = ResourceManager.GetObject("Copy", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///layout(location = 0) in vec2 v_UV;
        ///
        ///out vec2 f_UV;
        ///
        ///void main()
        ///{
        ///	f_UV = v_UV;
        ///	vec2 Position = v_UV * 2.0 - 1.0;
        ///	gl_Position = vec4(Position, 0.0, 1.0);
        ///}.
        /// </summary>
        public static string Edit_VS {
            get {
                return ResourceManager.GetString("Edit_VS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///uniform sampler2D TextureUnit0; // Original
        ///
        /////region Photoshop Uniforms
        ///uniform vec3	iColorBG;	// Photoshop Background Color
        ///uniform vec3	iColorFG;	// Photoshop Foreground Color
        ///uniform vec2	iImageSize;	// Image Size
        ///uniform vec2	iViewSize;	// Viewport Size
        ///uniform vec4	iRandom;	// Random values [0 .. 1]
        ///uniform float	iTime;		// Plugin running time
        ///uniform vec4	iDate;		// Year, Month, Day, Time in seconds
        /////endregion
        ///
        ///in vec2 f_UV;
        ///
        ///layout(location = 0) out vec4 FragColor;
        ///
        ///vo [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EditBufferA_FS {
            get {
                return ResourceManager.GetString("EditBufferA_FS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///uniform sampler2D TextureUnit0; // Original
        ///uniform sampler2D TextureUnit1; // Buffer A
        ///
        /////region Photoshop Uniforms
        ///uniform vec3	iColorBG;	// Photoshop Background Color
        ///uniform vec3	iColorFG;	// Photoshop Foreground Color
        ///uniform vec2	iImageSize;	// Image Size
        ///uniform vec2	iViewSize;	// Viewport Size
        ///uniform vec4	iRandom;	// Random values [0 .. 1]
        ///uniform float	iTime;		// Plugin running time
        ///uniform vec4	iDate;		// Year, Month, Day, Time in seconds
        /////endregion
        ///
        ///in vec2 f_UV;
        ///
        ///l [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EditBufferB_FS {
            get {
                return ResourceManager.GetString("EditBufferB_FS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///uniform sampler2D TextureUnit0; // Original
        ///uniform sampler2D TextureUnit1; // Buffer A
        ///uniform sampler2D TextureUnit2; // Buffer B
        ///
        /////region Photoshop Uniforms
        ///uniform vec3	iColorBG;	// Photoshop Background Color
        ///uniform vec3	iColorFG;	// Photoshop Foreground Color
        ///uniform vec2	iImageSize;	// Image Size
        ///uniform vec2	iViewSize;	// Viewport Size
        ///uniform vec4	iRandom;	// Random values [0 .. 1]
        ///uniform float	iTime;		// Plugin running time
        ///uniform vec4	iDate;		// Year, Month, Day, Time  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EditBufferC_FS {
            get {
                return ResourceManager.GetString("EditBufferC_FS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///uniform sampler2D TextureUnit0; // Original
        ///uniform sampler2D TextureUnit1; // Buffer A
        ///uniform sampler2D TextureUnit2; // Buffer B
        ///uniform sampler2D TextureUnit3; // Buffer C
        ///
        /////region Photoshop Uniforms
        ///uniform vec3	iColorBG;	// Photoshop Background Color
        ///uniform vec3	iColorFG;	// Photoshop Foreground Color
        ///uniform vec2	iImageSize;	// Image Size
        ///uniform vec2	iViewSize;	// Viewport Size
        ///uniform vec4	iRandom;	// Random values [0 .. 1]
        ///uniform float	iTime;		// Plugin running time
        ///un [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EditBufferD_FS {
            get {
                return ResourceManager.GetString("EditBufferD_FS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///uniform sampler2D TextureUnit0;
        ///
        /////region Photoshop Uniforms
        ///uniform vec3	iColorBG;	// Photoshop Background Color
        ///uniform vec3	iColorFG;	// Photoshop Foreground Color
        ///uniform vec2	iImageSize;	// Image Size
        ///uniform vec2	iViewSize;	// Viewport Size
        ///uniform vec4	iRandom;	// Random values [0 .. 1]
        ///uniform float	iTime;		// Plugin running time
        ///uniform vec4	iDate;		// Year, Month, Day, Time in seconds
        /////endregion
        ///
        ///in vec2 f_UV;
        ///
        ///layout(location = 0) out vec4 FragColor;
        ///
        ///void main()
        ///{ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string EditImage_FS {
            get {
                return ResourceManager.GetString("EditImage_FS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Byte[].
        /// </summary>
        public static byte[] glslHightlight {
            get {
                object obj = ResourceManager.GetObject("glslHightlight", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Help {
            get {
                object obj = ResourceManager.GetObject("Help", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap New {
            get {
                object obj = ResourceManager.GetObject("New", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Open {
            get {
                object obj = ResourceManager.GetObject("Open", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Paste {
            get {
                object obj = ResourceManager.GetObject("Paste", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Redo {
            get {
                object obj = ResourceManager.GetObject("Redo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Save {
            get {
                object obj = ResourceManager.GetObject("Save", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized resource of type System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap Undo {
            get {
                object obj = ResourceManager.GetObject("Undo", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///uniform sampler2D TextureUnit0; // Original
        ///uniform sampler2D TextureUnit1; // Processed
        ///uniform sampler2D TextureUnit2; // Buffer A
        ///uniform sampler2D TextureUnit3; // Buffer B
        ///uniform sampler2D TextureUnit4; // Buffer C
        ///uniform sampler2D TextureUnit5; // Buffer D
        ///
        ///in vec2 f_UV;
        ///
        ///uniform ivec2 DrawMode = ivec2(0); // Draw Mode; Buffer Draw Mode (Image, A, B, C, D)
        ///uniform float PreviewPosition = 0.5;
        ///
        ///layout(location = 0) out vec4 FragColor;
        ///
        ///void main()
        ///{
        ///	vec4 Original = text [rest of string was truncated]&quot;;.
        /// </summary>
        public static string View_FS {
            get {
                return ResourceManager.GetString("View_FS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///layout(location = 0) in vec2 v_Position;
        ///layout(location = 1) in vec2 v_UV;
        ///
        ///uniform mat4 MVP = mat4(1.0);
        ///
        ///out vec2 f_UV;
        ///
        ///void main()
        ///{
        ///	f_UV = v_UV;
        ///	gl_Position = MVP * vec4(v_Position, 0.0, 1.0);
        ///}.
        /// </summary>
        public static string View_VS {
            get {
                return ResourceManager.GetString("View_VS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///
        ///in vec2 f_UV;
        ///
        ///uniform vec2 Size = vec2(32); // TextureSize / GridSize
        ///uniform vec4 ColorDark  = vec4(vec3(0.3), 0.0);
        ///uniform vec4 ColorLight = vec4(vec3(0.7), 0.0);
        ///
        ///layout(location = 0) out vec4 FragColor;
        ///
        ///void main()
        ///{
        ///	// vec2 UV = vec2(f_UV.x, 1.0 - f_UV.y); // Starting from Top Left corner (Photoshop Like)
        ///	vec2 UV = f_UV - 0.5; // Starting from Center
        ///    vec2 Pos = floor(UV * Size);
        ///	float Checker = mod(Pos.x + Pos.y, 2.0);
        ///    FragColor = mix(ColorDark, ColorLight, C [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ViewGrid_FS {
            get {
                return ResourceManager.GetString("ViewGrid_FS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///
        ///uniform vec4 LineColor = vec4(0.8, 0.8, 0.8, 0.0);
        ///
        ///layout(location = 0) out vec4 FragColor;
        ///
        ///void main()
        ///{
        ///    FragColor = LineColor;
        ///}.
        /// </summary>
        public static string ViewLine_FS {
            get {
                return ResourceManager.GetString("ViewLine_FS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #version 330
        ///layout(location = 0) in vec2 v_Position;
        ///
        ///void main()
        ///{
        ///	gl_Position = vec4(v_Position, 0.0, 1.0);
        ///}.
        /// </summary>
        public static string ViewLine_VS {
            get {
                return ResourceManager.GetString("ViewLine_VS", resourceCulture);
            }
        }
    }
}
